import React, { useState, useEffect } from 'react';
import { Carousel } from 'react-responsive-carousel';
import 'react-responsive-carousel/lib/styles/carousel.min.css';
import { Link } from 'react-router-dom';

const Hero = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const totalSlides = 3;

  const nextSlide = () => {
    setCurrentSlide((currentSlide + 1) % totalSlides);
  };

  useEffect(() => {
    const interval = setInterval(nextSlide, 5000);
    return () => {
      clearInterval(interval);
    };
  }, [currentSlide]);

  return (
    <div className="relative">
      <Carousel
        showStatus={false}
        showArrows={false}
        selectedItem={currentSlide}
        onChange={setCurrentSlide}
        autoPlay
        infiniteLoop
        interval={5000}
        dynamicHeight={false}
        showThumbs={false}
      >
        <div>
          <div
            className="hero-slide"
            style={{
              backgroundImage:
                'url("https://images.pexels.com/photos/6063706/pexels-photo-6063706.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1")',
            }}
          >
            <div className="hero-text">
              <h1 className="text-xl md:text-3xl lg:text-5xl text-white font-bold mb-4">
                Welcome to Our Awesome Website
              </h1>
              <p className="text-white text-lg lg:text-2xl mb-6">
                Discover amazing features and services that await you.
              </p>
              <Link to="/Oss">
                <button className="bn632-hover bn28" id="button">
                  Book Now
                </button>
              </Link>
            </div>
          </div>
        </div>
        <div>
          <div
            className="hero-slide"
            style={{
              backgroundImage:
                'url("https://images.pexels.com/photos/13263947/pexels-photo-13263947.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1")',
            }}
          >
            <div className="hero-text">
              <h1 className="text-xl md:text-3xl lg:text-5xl text-white font-bold mb-4">
                Welcome to Our Awesome Website
              </h1>
              <p className="text-white text-lg lg:text-2xl mb-6">
                Discover amazing features and services that await you.
              </p>
              <Link to="/Oss">
                <button className="bn632-hover bn28" id="button">
                  Book Now
                </button>
              </Link>
            </div>
          </div>
        </div>
        <div>
          <div
            className="hero-slide"
            style={{
              backgroundImage:
                'url("https://images.pexels.com/photos/10853959/pexels-photo-10853959.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1")',
            }}
          >
            <div className="hero-text">
              <h1 className="text-xl md:text-3xl lg:text-5xl text-white font-bold mb-4">
                Welcome to Our Awesome Website
              </h1>
              <p className="text-white text-lg lg:text-2xl mb-6">
                Discover amazing features and services that await you.
              </p>
              <Link to="/Oss">
                <button className="bn632-hover bn28" id="button">
                  Book Now
                </button>
              </Link>
            </div>
          </div>
        </div>
      </Carousel>
    </div>
  );
};

export default Hero;




-----------
<section style={{ background: "rgb(255,252,252)" }}>
  <div className="flex w-full max-w-sm mx-auto overflow-hidden bg-white rounded-lg shadow-lg dark:bg-gray-800 lg:max-w-4xl">
    <div className="hidden bg-cover lg:block lg:w-1/2" style={{ backgroundImage: "url('https://images.unsplash.com/photo-1606660265514-358ebbadc80d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1575&q=80')" }}></div>

    <div className="w-full px-6 py-8 md:px-8 lg:w-1/2">
      <div className="flex justify-center mx-auto">
        <img className="w-auto h-7 sm:h-8" src="https://merakiui.com/images/logo.svg" alt="" />
      </div>

      <p className="mt-3 text-xl text-center text-gray-600 dark:text-gray-200">Welcome back!</p>

      <a href="#" className="flex items-center justify-center mt-4 text-gray-600 transition-colors duration-300 transform border rounded-lg dark:border-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600">
        <div className="px-4 py-2">
          <svg className="w-6 h-6" viewBox="0 0 40 40">
            <path d="M36.3425 16.7358H35V16.6667H20V23.3333H29.4192C28.045 27.2142 24.3525 30 20 30C14.4775 30 10 25.5225 10 20C10 14.4775 14.4775 9.99999 20 9.99999C22.5492 9.99999 24.8683 10.9617 26.6342 12.5325L31.3483 7.81833C28.3717 5.04416 24.39 3.33333 20 3.33333C10.7958 3.33333 3.33335 10.7958 3.33335 20C3.33335 29.2042 10.7958 36.6667 20 36.6667C29.2042 36.6667 36.6667 29.2042 36.6667 20C36.6667 18.8825 36.5517 17.7917 36.3425 16.7358Z" fill="#FFC107" />
            <path d="M5.25497 12.2425L10.7308 16.2583C12.2125 12.59 15.8008 9.99999 20 9.99999C22.5491 9.99999 24.8683 10.9617 26.6341 12.5325L31.3483 7.81833C28.3716 5.04416 24.39 3.33333 20 3.33333C13.5983 3.33333 8.04663 6.94749 5.25497 12.2425Z" fill="#FF3D00" />
            <path d="M20 36.6667C24.305 36.6667 28.2167 35.0192 31.1742 32.34L26.0159 27.975C24.3425 29.2425 22.2625 30 20 30C15.665 30 11.9842 27.2359 10.5975 23.3784L5.16254 27.5659C7.92087 32.9634 13.5225 36.6667 20 36.6667Z" fill="#4CAF50" />
            <path d="M36.3425 16.7358H35V16.6667H20V23.3333H29.4192C28.7592 25.1975 27.56 26.805 26.0133 27.9758C26.0142 27.975 26.015 27.975 26.0158 27.9742L31.1742 32.3392C30.8092 32.6708 36.6667 28.3333 36.6667 20C36.6667 18.8825 36.5517 17.7917 36.3425 16.7358Z" fill="#1976D2" />
          </svg>
        </div>
        <span className="w-5/6 px-4 py-3 font-bold text-center">Sign in with Google</span>
      </a>

      <div className="flex items-center justify-between mt-4">
        <span className="w-1/5 border-b dark:border-gray-600 lg:w-1/4"></span>
        <a href="#" className="text-xs text-center text-gray-500 uppercase dark:text-gray-400 hover:underline">or login with email</a>
        <span className="w-1/5 border-b dark:border-gray-400 lg:w-1/4"></span>
      </div>

      <div className="mt-4">
        <label className="block mb-2 text-sm font-medium text-gray-600 dark:text-gray-200" htmlFor="LoggingEmailAddress">Email Address</label>
        <input id="LoggingEmailAddress" className="block w-full px-4 py-2 text-gray-700 bg-white border rounded-lg dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 focus:ring-opacity-40 dark:focus:border-blue-300 focus:outline-none focus:ring focus:ring-blue-300" type="email" />
      </div>

      <div className="mt-4">
        <div className="flex justify-between">
          <label className="block mb-2 text-sm font-medium text-gray-600 dark:text-gray-200" htmlFor="loggingPassword">Password</label>
          <a href="#" className="text-xs text-gray-500 dark:text-gray-300 hover:underline">Forget Password?</a>
        </div>
        <input id="loggingPassword" className="block w-full px-4 py-2 text-gray-700 bg-white border rounded-lg dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 focus:ring-opacity-40 dark:focus:border-blue-300 focus:outline-none focus:ring focus:ring-blue-300" type="password" />
      </div>

      <div className="mt-6">
        <button className="w-full px-6 py-3 text-sm font-medium tracking-wide text-white capitalize transition-colors duration-300 transform bg-gray-800 rounded-lg hover:bg-gray-700 focus:outline-none focus:ring focus:ring-gray-300 focus:ring-opacity-50">
          Sign In
        </button>
      </div>

      <div className="flex items-center justify-between mt-4">
        <span className="w-1/5 border-b dark:border-gray-600 md:w-1/4"></span>
        <a href="#" className="text-xs text-gray-500 uppercase dark:text-gray-400 hover:underline">or sign up</a>
        <span className="w-1/5 border-b dark:border-gray-600 md:w-1/4"></span>
      </div>
    </div>
  </div>
</section>
);
};

export default SignUp;
-=======-=-=---------------------==========\
-=======-=-=---------------------==========\
return (
  
    <section className="bg-white dark:bg-gray-900">
      <div className="flex justify-center min-h-screen">
        <div className="hidden bg-cover lg:block lg:w-2/5" style={{ backgroundImage: "url('https://images.unsplash.com/photo-1494621930069-4fd4b2e24a11?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=715&q=80')" }}>
        </div>

        <div className="flex items-center w-full max-w-3xl p-8 mx-auto lg:px-12 lg:w-3/5">
          <div className="w-full">
            <h1 className="text-2xl font-semibold tracking-wider text-gray-800 capitalize dark:text-white">
              Get your free account now.
            </h1>

            <p className="mt-4 text-gray-500 dark:text-gray-400">
              Let’s get you all set up so you can verify your personal account and begin setting up your profile.
            </p>

            <div className="mt-6">
              <h1 className="text-gray-500 dark:text-gray-300">Select type of account</h1>

              <div className="mt-3 md:flex md:items-center md:-mx-2">
                <button className="flex justify-center w-full px-6 py-3 text-white bg-blue-500 rounded-lg md:w-auto md:mx-2 focus:outline-none">
                  <svg xmlns="http://www.w3.org/2000/svg" className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth="2">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  <span className="mx-2">
                    client
                  </span>
                </button>

                <button className="flex justify-center w-full px-6 py-3 mt-4 text-blue-500 border border-blue-500 rounded-lg md:mt-0 md:w-auto md:mx-2 dark:border-blue-400 dark:text-blue-400 focus:outline-none">
                  <svg xmlns="http://www.w3.org/2000/svg" className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth="2">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                  <span className="mx-2">
                    worker
                  </span>
                </button>
              </div>
            </div>

            <form className="grid grid-cols-1 gap-6 mt-8 md:grid-cols-2">
              <div>
                <label className="block mb-2 text-sm text-gray-600 dark:text-gray-200">First Name</label>
                <input type="text" placeholder="John" className="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40" />
              </div>

              {/* ... الحقول الأخرى ... */}

              <button className="flex items-center justify-between w-full px-6 py-3 text-sm tracking-wide text-white capitalize transition-colors duration-300 transform bg-blue-500 rounded-lg hover:bg-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-50">
                <span>Sign Up </span>
                <svg xmlns="http://www.w3.org/2000/svg" className="w-5 h-5 rtl:-scale-x-100" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clipRule="evenodd" />
                </svg>
              </button>
            </form>
          </div>
        </div>
      </div>
    </section>
  );
};

export default SignUp;























































return (
  <section className="bg-white dark:bg-gray-900">
    <div className="flex justify-center min-h-screen">
      <div
        className="hidden bg-cover lg:block lg:w-2/5"
        style={{
          backgroundImage:
            "url('https://images.unsplash.com/photo-1494621930069-4fd4b2e24a11?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=715&q=80')",
        }}
      ></div>

      <div className="flex items-center w-full max-w-3xl p-8 mx-auto lg:px-12 lg:w-3/5">
        <div className="w-full">
          <h1 className="text-2xl font-semibold tracking-wider text-gray-800 capitalize dark:text-white">
            Get your free account now.
          </h1>

          <p className="mt-4 text-gray-500 dark:text-gray-400">
            Let’s get you all set up so you can verify your personal account and begin setting up your profile.
          </p>

          <div className="mt-6">
            <h1 className="text-gray-500 dark:text-gray-300">Select type of account</h1>

            <div className="mt-3 md:flex md:items-center md:-mx-2">
              <button className="flex justify-center w-full px-6 py-3 text-white bg-blue-500 rounded-lg md:w-auto md:mx-2 focus:outline-none">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="w-6 h-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  strokeWidth="2"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                  />
                </svg>
                <span className="mx-2">client</span>
              </button>

              <button className="flex justify-center w-full px-6 py-3 mt-4 text-blue-500 border border-blue-500 rounded-lg md:mt-0 md:w-auto md:mx-2 dark:border-blue-400 dark:text-blue-400 focus:outline-none">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="w-6 h-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  strokeWidth="2"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                  />
                </svg>
                <span className="mx-2">worker</span>
              </button>
            </div>
          </div>

          <form className="grid grid-cols-1 gap-6 mt-8 md:grid-cols-2">
            <div>
              <label className="block mb-2 text-sm text-gray-600 dark:text-gray-200">First Name</label>
              <input
                type="text"
                placeholder="John"
                className="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40"
              />
            </div>

            <div>
              <label className="block mb-2 text-sm text-gray-600 dark:text-gray-200">Last name</label>
              <input
                type="text"
                placeholder="Snow"
                className="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-lg dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40"
              />
            </div>

            {/* ... الحقول الأخرى ... */}

            <button className="flex items-center justify-between w-full px-6 py-3 text-sm tracking-wide text-white capitalize transition-colors duration-300 transform bg-blue-500 rounded-lg hover:bg-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-50">
              <span>Sign Up </span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="w-5 h-5 rtl:-scale-x-100"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fillRule="evenodd"
                  d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                  clipRule="evenodd"
                />
              </svg>
            </button>
          </form>
        </div>
      </div>
    </div>
  </section>
);
};

export default SignUp;




































return (
  
  <section style={{ background: "rgb(255,252,252)" }}>
    <div className="container">
      <div className="row justify-content-center">
        <div className="col-md-6">
          
          <div
            style={{
              borderRadius: "8px",
              border: "1px solid #A5A5A5",
              boxShadow: "0px 0px 10px rgb(255, 252, 252)",
              padding: "20px",
              background: "(#fffcfc)",
              marginLeft:"40%"
            }}
            className="rounded-lg shadow md:mt-0 sm:max-w-md xl:p-0 "
          >
            <div className="p-4 space-y-2 md:space-y-2 sm:p-8">
              <h1
                style={{ color: "(#fffff)" }}
                className="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl "
              >
                Sign up for a new account
              </h1>
              <form className="space-y-2 md:space-y-2">
                <div>
                  <label
                    htmlFor="f_name"
                    style={{ color: "rgb(92, 92, 66)" }}
                    className="block mb-2 text-sm font-medium text-gray-900"
                  >
                    Your first name
                  </label>
                  <input
                    type="text"
                    name="f_name"
                    id="f_name"
                    style={{
                      background: "white",
                      border: "1px solid #A5A5A5",
                      borderRadius: "8px",
                      padding: "2.5px",
                      height: "3rem",
                      color: "rgb(92, 92, 66)",
                    }}
                    value={f_name}
                    onChange={(e) => setfirstName(e.target.value)}
                    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
                    placeholder="First Name"
                    required
                  />
                </div>
                <div>
                  <label
                    htmlFor="l_name"
                    style={{ color: "rgb(92, 92, 66)" }}
                    className="block mb-2 text-sm font-medium text-gray-900 "
                  >
                    Your last name
                  </label>
                  <input
                    type="text"
                    name="l_name"
                    id="l_name"
                    style={{
                      background: "white",
                      border: "1px solid #A5A5A5",
                      borderRadius: "8px",
                      padding: "2.5px",
                      height: "3rem",
                      color: "rgb(92, 92, 66)",
                    }}
                    value={l_name}
                    onChange={(e) => setlastName(e.target.value)}
                    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
                    placeholder="Last Name"
                    required
                  />
                </div>
                <div>
  <label
    htmlFor="email"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900"
  >
    Your email
  </label>
  <input
    type="email"
    name="email"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="email"
    value={email}
    onChange={(e) => setEmail(e.target.value)}
    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5"
    placeholder="Email"
    required
  />
  {emailError && <p style={{ color: "red" }}>{emailError}</p>}
</div>
<div>
  <label
    htmlFor="password"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900 "
  >
    Password
  </label>
  <input
    type="password"
    name="password"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="password"
    value={password}
    onChange={(e) => setPassword(e.target.value)}
    placeholder="••••••••"
    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
    required
  />
  {passwordError && <p style={{ color: "red" }}>{passwordError}</p>}
</div>
<div>
  <label
    htmlFor="confirm-password"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900"
  >
    Confirm password
  </label>
  <input
    type="password"
    name="confirm-password"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="confirm-password"
    value={confirmPassword}
    onChange={(e) => setConfirmPassword(e.target.value)}
    placeholder="••••••••"
    className="bg-(  #fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
    required
  />
</div>
<div>
  <label
    htmlFor="phone"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900 "
  >
    Phone Number
  </label>
  <input
    type="tel"
    name="phone"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="phone"
    value={usernumber}
    onChange={(e) => setphone(e.target.value)}
    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5"
    placeholder="Phone Number"
    required
  />
</div>              </form>
              <div className="flex space-x-4">
                <button
                  type="button"
                  onClick={handleSignUp}
                  style={{
                    background: "rgb(247, 36, 87)",
                    border: "2px solid #A5A5A5",
                    borderRadius: "8px",
                    color: "white",
                    height: "3rem",
                    cursor: "pointer",
                    width: "100%",
                  }}
                >
                  Sign Up with Data
                </button>
              </div>
              <div className="flex space-x-4">
                <button
                  type="button"
                  onClick={handleGoogleSignUp}
                  style={{
                    background: "rgb(66, 133, 244)",
                    border: "2px solid #A5A5A5",
                    borderRadius: "8px",
                    color: "white",
                    height: "3rem",
                    cursor: "pointer",
                    width: "100%",
                  }}
                >
                  Sign Up with Google
                </button>
              </div>
              {registrationMessage && (
                <div
                  className={`mt-4 ${
                    showSuccessModal ? "flex" : "hidden"
                  }`}
                >
                  <div className="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 w-full">
                    <p className="font-bold">Success</p>
                    <p>{registrationMessage}</p>
                    <button
                      className="mt-2 text-sm underline"
                      onClick={handleCloseSuccessModal}
                    >
                      Close
                    </button>
                  </div>
                </div>
              )}
              <p className="text-sm font-light text-gray-500 text-center mt-4">
                Already have an account?{" "}
                <Link
                  to="/signin"
                  className="font-medium text-primary-600 hover:underline "
                >
                  Sign in
                </Link>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
);
};

export default SignUp;
//////////////////////////////////////
import React, { useState } from "react";
import { Link } from "react-router-dom";
import axios from "axios";

const SignUp = () => {
  const [f_name, setfirstName] = useState("");
  const [l_name, setlastName] = useState("");

  const [userlocation, setlocation] = useState("");
  const [usernumber, setphone] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [agreeToTerms, setAgreeToTerms] = useState(false);
  const [passwordError, setPasswordError] = useState("");
  const [emailError, setEmailError] = useState("");
  const [registrationMessage, setRegistrationMessage] = useState("");
  const [showSuccessModal, setShowSuccessModal] = useState(false);

  const handleSignUp = async () => {

    const setCookie = (name, value) => {
        const cookieValue = encodeURIComponent(name) + '=' + encodeURIComponent(value) + '; expires=' + '; path=/';
        document.cookie = cookieValue;
      };

    // if (!agreeToTerms) {
    //   alert("You must agree to the terms of service.");
    //   return;
    // }

    // if (password !== confirmPassword) {
    //   setPasswordError("Passwords do not match");
    //   return;
    // } else if (password.length < 8 || !/\d/.test(password) || !/[a-z]/.test(password) || !/[A-Z]/.test(password) || !/[!@#$%^&*]/.test(password)) {
    //   setPasswordError("Password must be at least 8 characters and include numbers, lowercase and uppercase letters, and special characters.");
    //   return;
    // } else {
    //   setPasswordError("");
    // }

    if (!/^\S+@\S+\.\S+$/.test(email)) {
      setEmailError("Invalid email format");
      return;
    } else {
      setEmailError("");
    }

    try {
      const response = await axios.post("http://localhost:8080/register", {
       f_name,
       l_name,
        email,
        password,
        phone_number: usernumber,
      });
      setCookie('accessToken', response.data);
      console.log("success register", response.data);
      setRegistrationMessage("Register suceess");
      setShowSuccessModal(true);
      window.location.href= '/';
    } catch (error) {
      console.error("Regster Failed", error);
      setRegistrationMessage("Regster Failed");
    }
  };

  const handleCloseSuccessModal = () => {
    setShowSuccessModal(false);
  };

//   const signInWithGoogle = async () => {
//     try {
//       const response = await axios.post('http://localhost:8080/login');
//     } catch (error) {
//       console.error('Error signing in with Google:', error);
//     }
//   };

// //   const handleGoogleSignUp = () => {
// //     window.location.href = "http://localhost:3001/google";
// //   };



// Function to handle sign up with Google
const handleGoogleSignUp = async () => {
  try {
    // إذا كنت تستخدم مكتبة react-google-login أو أي مكتبة أخرى لتسهيل عملية تسجيل الدخول باستخدام Google، يمكنك استخدامها هنا
    // استخدم مفتاح API الذي قمت بالحصول عليه من Google API Console
    const response = await axios.post("http://localhost:8080/google", {
      apiKey: "YOUR_GOOGLE_API_KEY",
    });

    // Handle Google sign up response if needed
    console.log("success with Google:", response.data);
  } catch (error) {
    console.error("Error signing up with Google:", error);
  }
};
const backgroundImageStyle = {
  backgroundImage: "url('https://i.insider.com/5fab1609f24e720018a2aba7?width=700')",
  backgroundPosition: "center",
  Height:"50%",
  backgroundRepeat:"no-repeat",

};

// const imageContainerStyle = {
//   ...backgroundImageStyle,
//   height: "500px",
//   width: "500px",
//   marginLeft:"20px" 
  
// };





return (
  <section className="bg-white">
    <div className="flex justify-center min-h-screen">
      <div className="hidden lg:block lg:w-2/5" style={backgroundImageStyle}></div>
      <div className="flex items-center w-full max-w-3xl p-8 mx-auto lg:px-12 lg:w-3/5">
        <div className="w-full">

      
          <h1 className="text-2xl font-semibold tracking-wider text-gray-800 capitalize ">
            Get your free account now.
          </h1>

          <p className="mt-4 text-gray-500 ">
            Let’s get you all set up so you can verify your personal account and begin setting up your profile.
          </p>

          <div className="mt-6">
            <h1 className="text-gray-500 ">Select type of account</h1>

            <div className="mt-3 md:flex md:items-center md:-mx-2">
             

            
            </div>
          </div>
          <form className="space-y-2 md:space-y-2">
                <div>
                  <label
                    htmlFor="f_name"
                    style={{ color: "rgb(92, 92, 66)" }}
                    className="block mb-2 text-sm font-medium text-gray-900"
                  >
                    Your first name
                  </label>
                  <input
                    type="text"
                    name="f_name"
                    id="f_name"
                    style={{
                      background: "white",
                      border: "1px solid #A5A5A5",
                      borderRadius: "8px",
                      padding: "2.5px",
                      height: "3rem",
                      color: "rgb(92, 92, 66)",
                    }}
                    value={f_name}
                    onChange={(e) => setfirstName(e.target.value)}
                    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
                    placeholder="First Name"
                    required
                  />
                </div>
                <div>
                  <label
                    htmlFor="l_name"
                    style={{ color: "rgb(92, 92, 66)" }}
                    className="block mb-2 text-sm font-medium text-gray-900 "
                  >
                    Your last name
                  </label>
                  <input
                    type="text"
                    name="l_name"
                    id="l_name"
                    style={{
                      background: "white",
                      border: "1px solid #A5A5A5",
                      borderRadius: "8px",
                      padding: "2.5px",
                      height: "3rem",
                      color: "rgb(92, 92, 66)",
                    }}
                    value={l_name}
                    onChange={(e) => setlastName(e.target.value)}
                    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
                    placeholder="Last Name"
                    required
                  />
                </div>
                <div>
  <label
    htmlFor="email"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900"
  >
    Your email
  </label>
  <input
    type="email"
    name="email"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="email"
    value={email}
    onChange={(e) => setEmail(e.target.value)}
    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5"
    placeholder="Email"
    required
  />
  {emailError && <p style={{ color: "red" }}>{emailError}</p>}
</div>
<div>
  <label
    htmlFor="password"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900 "
  >
    Password
  </label>
  <input
    type="password"
    name="password"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="password"
    value={password}
    onChange={(e) => setPassword(e.target.value)}
    placeholder="••••••••"
    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
    required
  />
  {passwordError && <p style={{ color: "red" }}>{passwordError}</p>}
</div>
<div>
  <label
    htmlFor="confirm-password"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900"
  >
    Confirm password
  </label>
  <input
    type="password"
    name="confirm-password"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="confirm-password"
    value={confirmPassword}
    onChange={(e) => setConfirmPassword(e.target.value)}
    placeholder="••••••••"
    className="bg-(  #fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 "
    required
  />
</div>
<div>
  <label
    htmlFor="phone"
    style={{ color: "rgb(92, 92, 66)" }}
    className="block mb-2 text-sm font-medium text-gray-900 "
  >
    Phone Number
  </label>
  <input
    type="tel"
    name="phone"
    style={{
      background: "white",
      border: "1px solid #A5A5A5",
      borderRadius: "8px",
      padding: "2.5px",
      height: "3rem",
      color: "rgb(92, 92, 66)",
    }}
    id="phone"
    value={usernumber}
    onChange={(e) => setphone(e.target.value)}
    className="bg-(#fffff) border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5"
    placeholder="Phone Number"
    required
  />
</div>              </form>
              <div className="flex space-x-4">
                <button
                  type="button"
                  onClick={handleSignUp}
                  style={{
                    background: "rgb(247, 36, 87)",
                    border: "2px solid #A5A5A5",
                    borderRadius: "8px",
                    color: "white",
                    height: "3rem",
                    cursor: "pointer",
                    width: "100%",
                  }}
                >
                  Sign Up with Data
                </button>
              </div>
              <div className="flex space-x-4">
                <button
                  type="button"
                  onClick={handleGoogleSignUp}
                  style={{
                    background: "rgb(66, 133, 244)",
                    border: "2px solid #A5A5A5",
                    borderRadius: "8px",
                    color: "white",
                    height: "3rem",
                    cursor: "pointer",
                    width: "100%",
                  }}
                >
                  Sign Up with Google
                </button>
              </div>
              {registrationMessage && (
                <div
                  className={`mt-4 ${
                    showSuccessModal ? "flex" : "hidden"
                  }`}
                >
                  <div className="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 w-full">
                    <p className="font-bold">Success</p>
                    <p>{registrationMessage}</p>
                    <button
                      className="mt-2 text-sm underline"
                      onClick={handleCloseSuccessModal}
                    >
                      Close
                    </button>
                  </div>
                </div>
              )}
              <p className="text-sm font-light text-gray-500 text-center mt-4">
                Already have an account?{" "}
                <Link
                  to="/signin"
                  className="font-medium text-primary-600 hover:underline "
                >
                  Sign in
                </Link>
              </p>
        </div>
      </div>
    </div>
  </section>
);
};

export default SignUp;

